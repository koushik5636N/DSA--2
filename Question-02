#include <stdio.h>
#include <string.h>

#define MAX_STUDENTS 100
#define NAME_LENGTH 50

void displayStudents(char students[][NAME_LENGTH], int count) {
    printf("Current List of Students:\n");
    for (int i = 0; i < count; i++) {
        printf("%d: %s\n", i + 1, students[i]);
    }
    printf("\n");
}

int main() {
    char students[MAX_STUDENTS][NAME_LENGTH];
    int count = 0;
    int choice;
    
    do {
        printf("Student Management System\n");
        printf("1. Create List\n");
        printf("2. Insert Student\n");
        printf("3. Delete Student\n");
        printf("4. Traverse List\n");
        printf("5. Search for Student\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // To consume newline character

        switch (choice) {
            case 1: {
                printf("Enter the number of students: ");
                scanf("%d", &count);
                getchar(); // To consume newline character
                for (int i = 0; i < count; i++) {
                    printf("Enter name of student %d: ", i + 1);
                    fgets(students[i], NAME_LENGTH, stdin);
                    students[i][strcspn(students[i], "\n")] = '\0'; // Remove newline
                }
                displayStudents(students, count);
                break;
            }
            case 2: {
                if (count < MAX_STUDENTS) {
                    char newStudent[NAME_LENGTH];
                    int position;
                    printf("Enter name of the new student: ");
                    fgets(newStudent, NAME_LENGTH, stdin);
                    newStudent[strcspn(newStudent, "\n")] = '\0'; // Remove newline
                    printf("Enter the position to insert (1 to %d): ", count + 1);
                    scanf("%d", &position);
                    getchar(); // To consume newline character
                    
                    if (position < 1 || position > count + 1) {
                        printf("Invalid position!\n");
                    } else {
                        for (int i = count; i >= position - 1; i--) {
                            strcpy(students[i + 1], students[i]);
                        }
                        strcpy(students[position - 1], newStudent);
                        count++;
                        displayStudents(students, count);
                    }
                } else {
                    printf("Student list is full!\n");
                }
                break;
            }
            case 3: {
                int deleteChoice;
                printf("Delete by (1) Name or (2) Index? ");
                scanf("%d", &deleteChoice);
                getchar(); // To consume newline character
                
                if (deleteChoice == 1) {
                    char nameToDelete[NAME_LENGTH];
                    printf("Enter the name of the student to delete: ");
                    fgets(nameToDelete, NAME_LENGTH, stdin);
                    nameToDelete[strcspn(nameToDelete, "\n")] = '\0'; // Remove newline
                    
                    int found = 0;
                    for (int i = 0; i < count; i++) {
                        if (strcmp(students[i], nameToDelete) == 0) {
                            found = 1;
                            for (int j = i; j < count - 1; j++) {
                                strcpy(students[j], students[j + 1]);
                            }
                            count--;
                            break;
                        }
                    }
                    if (found) {
                        printf("Student '%s' deleted.\n", nameToDelete);
                    } else {
                        printf("Student not found.\n");
                    }
                } else if (deleteChoice == 2) {
                    int index;
                    printf("Enter the index of the student to delete (1 to %d): ", count);
                    scanf("%d", &index);
                    getchar(); // To consume newline character
                    
                    if (index < 1 || index > count) {
                        printf("Invalid index!\n");
                    } else {
                        for (int i = index - 1; i < count - 1; i++) {
                            strcpy(students[i], students[i + 1]);
                        }
                        count--;
                        printf("Student at index %d deleted.\n", index);
                    }
                } else {
                    printf("Invalid choice!\n");
                }
                displayStudents(students, count);
                break;
            }
            case 4: {
                displayStudents(students, count);
                break;
            }
            case 5: {
                char nameToSearch[NAME_LENGTH];
                printf("Enter the name of the student to search: ");
                fgets(nameToSearch, NAME_LENGTH, stdin);
                nameToSearch[strcspn(nameToSearch, "\n")] = '\0'; // Remove newline
                
                int found = 0;
                for (int i = 0; i < count; i++) {
                    if (strcmp(students[i], nameToSearch) == 0) {
                        printf("Student '%s' found at position %d.\n", nameToSearch, i + 1);
                        found = 1;
                        break;
                    }
                }
                if (!found) {
                    printf("Student not found.\n");
                }
                break;
            }
            case 6: {
                printf("Exiting...\n");
                break;
            }
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 6);

    return 0;
}
